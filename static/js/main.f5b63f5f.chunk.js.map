{"version":3,"sources":["LoveLetter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["a","fetch","json","LoveLetter","props","state","text","getLoveLetter","then","resp","setState","result","join","this","React","Component","App","queryString","document","location","search","name","URLSearchParams","get","className","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wUAEA,sBAAAA,EAAA,sEACkBC,MAAM,0DAA2D,CAC3E,OAAU,OACV,QAAW,CACP,iBAAkB,qDAClB,kBAAmB,sCAL/B,uCAOQC,QAPR,4C,sBAUO,IAAMC,EAAb,kDACI,WAAYC,GAAa,IAAD,8BACpB,cAAMA,IACDC,MAAQ,CACTC,KAAM,c,0CAESC,GACRC,MAAK,SAAAC,GACZ,EAAKC,SAAS,CACVJ,KAAMG,EAAKE,OAAOC,KAAK,UARX,EAD5B,0CAaI,WACI,OAAQ,kCAAMC,KAAKR,MAAcC,KAAzB,WAdhB,GAAgCQ,IAAMC,WCiBvBC,MAxBf,WACE,IAAMC,EAAcC,SAASC,SAASC,OAEhCC,EADS,IAAIC,gBAAgBL,GACfM,IAAI,QACxB,OACE,sBAAKC,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,mBAEE,uCACQH,EADR,UAIF,kCACE,cAAC,EAAD,MAEF,iCACE,mBAAGI,KAAK,0CAAR,2DCPOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlB,SAASmB,eAAe,SAM1BX,M","file":"static/js/main.f5b63f5f.chunk.js","sourcesContent":["import React from 'react';\n\nasync function getLoveLetter() {\n    return (await fetch(\"https://rosa-love-letter1.p.rapidapi.com/loveletterlong\", {\n        \"method\": \"POST\",\n        \"headers\": {\n            \"x-rapidapi-key\": \"f8aebf5b48msh0b0bf93fe4e3978p128071jsn66ce53661385\",\n            \"x-rapidapi-host\": \"rosa-love-letter1.p.rapidapi.com\"\n        }\n    })).json();\n}\n\nexport class LoveLetter extends React.Component {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            text: 'Loading...',\n        }\n        const loveLetter = getLoveLetter();\n        loveLetter.then(resp => {\n            this.setState({\n                text: resp.result.join(' ')\n            })\n        });\n    }\n    render() {\n        return (<p> {(this.state as any).text} </p>);\n    }\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { LoveLetter } from './LoveLetter';\n\nfunction App() {\n  const queryString = document.location.search;\n  const params = new URLSearchParams(queryString);\n  const name = params.get('name');\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        ‚ù§\n        <h1>\n          Dear {name},\n        </h1>\n      </header>\n      <article>\n        <LoveLetter />\n      </article>\n      <footer>\n        <a href=\"https://github.com/geekdenz/love-letter\">\n          https://github.com/geekdenz/love-letter\n        </a>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}